# 02-20-2023 Leetcode 342. Power of Four
# https://leetcode.com/problems/power-of-four/description/

#we can use binary representation here right?
# 1 00 = 4
# 1 00 00 = 16
# 1 00 00 00 = 64
#So we could shift and count ones and zeros

#OR, we could note that in the given range there... really
#arent that many powers of four in the first place. We can easily just
#store them in an set and directly check. 

#The input is negative, but its asking for powers of positive 4 so...
#any negative input is false

#So heres the question: whats right for the interview? I could MANUALLY
#make that table live. I could write a program to make that table, then
#simply use that input in a the ACTUAL solution, or I could do the bit 
# minipulation method. Here and now, I'd present all three versions and 
# simply ask. My actual preference is to write a loop to gen the output
#then rewrite the solution


class Solution:
    def isPowerOfFour(self, n: int) -> bool:
        
        #generate our list of powers of 4 
        #Do once and simply manually keep the ans to redo solution
        # i = 0
        # ans = []
        # max_pow = 2**31 - 1
        # while 4**i < (max_pow):

        #     ans.append(4**i)
        #     i += 1
        # pass

        #As expected, only 15 elements: [1,4,16,64,256,1024,4096,16384,65536,262144,1048576,4194304,16777216,67108864,268435456,1073741824]

        # return n in ans
        return n in set([1,4,16,64,256,1024,4096,16384,65536,262144,1048576,4194304,16777216,67108864,268435456,1073741824])